name: Run a notebook in the current repo on PR

on:
  pull_request:

env:
  DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}

jobs:
  repos-notebook:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Run local notebook
        uses: databricks/run-notebook@main
        id: upload-repo-run
        with:
          local-notebook-path: tests/run_unit_tests.py
          git-commit: "${{ github.event.pull_request.head.sha }}"
          databricks-token: ${{ secrets.DATABRICKS_TOKEN }}
          # existing-cluster-id: "0510-121004-pklwcb7v"          
          new-cluster-json: >
           {            
             "node_type_id": "Standard_D4s_v5",
             "spark_version": "11.3.x-scala2.12",
             "num_workers": 0,
             "custom_tags": {
              "Purpose": "Test CLI"
             },
             "spark_conf": {
               "spark.databricks.cluster.profile": "singleNode",
               "spark.master": "[*, 4]"
             },
            #  "azure_attributes": {
            #    "first_on_demand": 1,
            #    "availability": "ON_DEMAND_AZURE",
            #    "spot_bid_max_price": -1
            #  },            
             "enable_elastic_disk": true,
             "autoscale": {
               "min_workers": 1,
               "max_workers": 3
             },
             "runtime_engine": "STANDARD"
           }
          #   {
          #     "num_workers": 1,
          #     "spark_version": "10.4.x-scala2.12",
          #     "node_type_id": "i3.xlarge"
          #   }
          libraries-json: >
            [
              {"pypi": 
                {"package": "pytest"}
              },
              {"pypi":
                {"package": "wget"}
              }
              ]
          notebook-params-json: > 
            {"run_as" : "testing"}
          # Grant all users view permission on the notebook results, so that they can
          # see the result of our CI notebook maybe
          # access-control-list-json: >
          #   [
          #     {
          #       "group_name": "users",
          #       "permission_level": "CAN_VIEW"
          #     }
          #   ]
          run-name: "Integration test"